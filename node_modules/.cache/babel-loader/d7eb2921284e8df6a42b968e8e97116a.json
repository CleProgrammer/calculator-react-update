{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Clebson\\\\Documents\\\\CursoWeb7\\\\Calculator-react\\\\src\\\\components\\\\CleanLeft.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CleanLeft() {\n  _s();\n\n  const a = cl => document.querySelector(cl);\n\n  const [number1, setnumber1] = useState();\n  const [innerHTMLNumber, setinnerHTMLNumber1] = useState();\n  const [checkNumber1, setcheckNumber1] = useState(false);\n\n  const cleanLeft = () => {\n    //let innerHTMLNumber1 = a('.number1').innerHTML.split('')\n    setcheckNumber1(true);\n    /*let teste = ''\r\n    for(let i in innerHTMLNumber1) {\r\n        setnumber1( innerHTMLNumber1[i] )\r\n        console.log(innerHTMLNumber1[i])\r\n        teste =+ innerHTMLNumber1[i]\r\n    }*/\n    //console.log(innerHTMLNumber1)\n    //a('.number1').innerHTML = innerHTMLNumber1\n  };\n\n  useEffect(() => {\n    if (checkNumber1 === true) {\n      setinnerHTMLNumber1(a('.number1').innerHTML);\n      console.log(innerHTMLNumber);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"clean-left\",\n    onClick: cleanLeft,\n    children: \"x\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CleanLeft, \"SfkLZTA5Jvx7x//GvubgDvSNCU8=\");\n\n_c = CleanLeft;\nexport default CleanLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"CleanLeft\");","map":{"version":3,"names":["React","useEffect","useState","CleanLeft","a","cl","document","querySelector","number1","setnumber1","innerHTMLNumber","setinnerHTMLNumber1","checkNumber1","setcheckNumber1","cleanLeft","innerHTML","console","log"],"sources":["C:/Users/Clebson/Documents/CursoWeb7/Calculator-react/src/components/CleanLeft.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction CleanLeft() {\r\n    const a = (cl) => document.querySelector(cl)\r\n\r\n    const [number1, setnumber1] = useState()\r\n    const [innerHTMLNumber, setinnerHTMLNumber1] = useState()\r\n    const [checkNumber1, setcheckNumber1] = useState(false)\r\n\r\n    const cleanLeft = () => {\r\n        //let innerHTMLNumber1 = a('.number1').innerHTML.split('')\r\n\r\n        setcheckNumber1( true )\r\n        \r\n        /*let teste = ''\r\n        for(let i in innerHTMLNumber1) {\r\n            setnumber1( innerHTMLNumber1[i] )\r\n            console.log(innerHTMLNumber1[i])\r\n            teste =+ innerHTMLNumber1[i]\r\n        }*/\r\n        //console.log(innerHTMLNumber1)\r\n        //a('.number1').innerHTML = innerHTMLNumber1\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(checkNumber1 === true) {\r\n            setinnerHTMLNumber1( a('.number1').innerHTML )\r\n            console.log( innerHTMLNumber )\r\n        }\r\n    })\r\n\r\n\r\n\r\n  return (\r\n    <button className='clean-left' onClick={cleanLeft}>x</button>\r\n  )\r\n}\r\n\r\nexport default CleanLeft\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACjB,MAAMC,CAAC,GAAIC,EAAD,IAAQC,QAAQ,CAACC,aAAT,CAAuBF,EAAvB,CAAlB;;EAEA,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;EACA,MAAM,CAACQ,eAAD,EAAkBC,mBAAlB,IAAyCT,QAAQ,EAAvD;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;;EAEA,MAAMY,SAAS,GAAG,MAAM;IACpB;IAEAD,eAAe,CAAE,IAAF,CAAf;IAEA;AACR;AACA;AACA;AACA;AACA;IACQ;IACA;EACH,CAbD;;EAeAZ,SAAS,CAAC,MAAM;IACZ,IAAGW,YAAY,KAAK,IAApB,EAA0B;MACtBD,mBAAmB,CAAEP,CAAC,CAAC,UAAD,CAAD,CAAcW,SAAhB,CAAnB;MACAC,OAAO,CAACC,GAAR,CAAaP,eAAb;IACH;EACJ,CALQ,CAAT;EASF,oBACE;IAAQ,SAAS,EAAC,YAAlB;IAA+B,OAAO,EAAEI,SAAxC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;GAlCQX,S;;KAAAA,S;AAoCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}